package chess;

public class Controller {

	Model model;
	View view;
	
	public void startup() {
		// TODO Auto-generated method stub
		model.setPlayer(1);
		
		//black pieces
		model.setBoardContents(0, 0, -2);
		model.setBoardContents(1, 0, -3);
		model.setBoardContents(2, 0, -4);
		model.setBoardContents(3, 0, -5);
		model.setBoardContents(4, 0, -6);
		model.setBoardContents(5, 0, -4);
		model.setBoardContents(6, 0, -3);
		model.setBoardContents(7, 0, -2);
		
		model.setBoardContents(0, 1, -1);
		model.setBoardContents(1, 1, -1);
		model.setBoardContents(2, 1, -1);
		model.setBoardContents(3, 1, -1);
		model.setBoardContents(4, 1, -1);
		model.setBoardContents(5, 1, -1);
		model.setBoardContents(6, 1, -1);
		model.setBoardContents(7, 1, -1);
		
		//white pieces
		model.setBoardContents(0, 7, 2);
		model.setBoardContents(1, 7, 3);
		model.setBoardContents(2, 7, 4);
		model.setBoardContents(3, 7, 5);
		model.setBoardContents(4, 7, 6);
		model.setBoardContents(5, 7, 4);
		model.setBoardContents(6, 7, 3);
		model.setBoardContents(7, 7, 2);
		
		model.setBoardContents(0, 6, 1);
		model.setBoardContents(1, 6, 1);
		model.setBoardContents(2, 6, 1);
		model.setBoardContents(3, 6, 1);
		model.setBoardContents(4, 6, 1);
		model.setBoardContents(5, 6, 1);
		model.setBoardContents(6, 6, 1);
		model.setBoardContents(7, 6, 1);
		
		model.setBoardContents(5, 5, 100);
		view.refreshView();
	}
	
	public void squareSelected(int player, int x, int y) {
		if(model.checkmate == true)
		{
			System.out.println("something gone wrong checkmate");
			return;
		}
		if(model.stalemate == true)
		{
			System.out.println("something gone wrong stalemate");
			return;
		}
		// players: 
		//1 = white
		//2 = black
		//
		//pieces (white is positive black is negative)
		//0 = empty
		//100 = playable space
		//1 = pawn
		//2 = rook
		//3 = knight
		//4 = bishop 
		//5 = queen 
		//6 = king
		
		if(player == 1)
		{
			if(model.getBoardContents(x, y) > 0)
			{
				view.message1.setText("Correct piece");
				//I want a function for each piece now for where they can play next 
				// has to be for the different colours as well
				if(model.getBoardContents(x, y) == 1)
				{
					whitepawnplay(x,y);
					view.refreshView();
				}
			}
			if(model.getBoardContents(x, y) < 0)
			{
				view.message1.setText("Wrong colour matey");
			}
			if(model.getBoardContents(x, y) == 0)
			{
				view.message1.setText("Not even a peice");
			}
		}
		if(player == 2)
		{
			if(model.getBoardContents(x, y) < 0)
			{
				view.message2.setText("Correct piece");
				//I want a function for each piece now for where they can play next 
				// has to be for the different colours as well
				
			}
			if(model.getBoardContents(x, y) > 0)
			{
				view.message2.setText("Wrong colour matey");
			}
			if(model.getBoardContents(x, y) == 0)
			{
				view.message2.setText("Not even a peice");
			}
		}
	}

	

	public void initialise(Model model, View view) {
		// TODO Auto-generated method stub
		this.model = model;
		this.view = view;
	}

	
	public boolean whitepawnplay(int x, int y)
	{
		boolean moved = false;
		if(y!=6)
		{
			moved = true;
		}
		if(model.getBoardContents(x, y-1) != 0)
		{
			model.setBoardContents(x, y-1, 100);
		}
		if(moved == false && model.getBoardContents(x, y-2) != 0)
		{
			model.setBoardContents(x, y-2, 100);
		}
		if(model.getBoardContents(x, y-1) == 0)
		{
			return false;
		}
		return true;
	}
}
